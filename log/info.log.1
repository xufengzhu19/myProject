DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.trySend(ConsumerNetworkClient.java:485)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:261)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:230)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 13 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient - [Consumer clientId=consumer-1, groupId=test] Cancelled request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=2, clientId=consumer-1, correlationId=9) due to node 0 being disconnected
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Coordinator discovery failed, refreshing metadata
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initialize connection to node mini1:9092 (id: 0 rack: null) for sending metadata request
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.access$700(NetworkClient.java:64)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1035)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:920)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:508)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:271)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:233)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.awaitMetadataUpdate(ConsumerNetworkClient.java:161)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:243)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 16 more
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending FindCoordinator request to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.trySend(ConsumerNetworkClient.java:485)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:261)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:230)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 13 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient - [Consumer clientId=consumer-1, groupId=test] Cancelled request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=2, clientId=consumer-1, correlationId=10) due to node 0 being disconnected
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] No broker available to send FindCoordinator request
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Coordinator discovery failed, refreshing metadata
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initialize connection to node mini1:9092 (id: 0 rack: null) for sending metadata request
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.access$700(NetworkClient.java:64)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1035)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:920)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:508)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:271)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:233)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.awaitMetadataUpdate(ConsumerNetworkClient.java:161)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:243)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 16 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] No broker available to send FindCoordinator request
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending FindCoordinator request to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.trySend(ConsumerNetworkClient.java:485)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:261)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:230)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 13 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient - [Consumer clientId=consumer-1, groupId=test] Cancelled request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=2, clientId=consumer-1, correlationId=11) due to node 0 being disconnected
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Coordinator discovery failed, refreshing metadata
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
INFO main org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [62.234.55.241:9092]
	check.crcs = true
	client.id = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

DEBUG main org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=test] Initializing the Kafka consumer
DEBUG main org.apache.kafka.clients.Metadata - Updated cluster metadata version 1 to Cluster(id = null, nodes = [62.234.55.241:9092 (id: -1 rack: null)], partitions = [], controller = null)
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name fetch-throttle-time
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name connections-closed:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name connections-created:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name successful-authentication:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name failed-authentication:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name bytes-sent-received:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name bytes-sent:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name bytes-received:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name select-time:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name io-time:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name heartbeat-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name join-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name sync-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name commit-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name bytes-fetched
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name records-fetched
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name fetch-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name records-lag
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name records-lead
INFO main org.apache.kafka.common.utils.AppInfoParser - Kafka version : 2.0.1
INFO main org.apache.kafka.common.utils.AppInfoParser - Kafka commitId : fa14705e51bd2ce5
DEBUG main org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=test] Kafka consumer initialized
DEBUG main org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=test] Subscribed to topic(s): test
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending FindCoordinator request to broker 62.234.55.241:9092 (id: -1 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node 62.234.55.241:9092 (id: -1 rack: null)
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node--1.bytes-sent
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node--1.bytes-received
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node--1.latency
DEBUG main org.apache.kafka.common.network.Selector - [Consumer clientId=consumer-1, groupId=test] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node -1
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Completed connection to node -1. Fetching API versions.
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating API versions fetch from node -1.
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Recorded API versions for node -1: (Produce(0): 0 to 7 [usable: 6], Fetch(1): 0 to 10 [usable: 8], ListOffsets(2): 0 to 5 [usable: 3], Metadata(3): 0 to 7 [usable: 6], LeaderAndIsr(4): 0 to 2 [usable: 1], StopReplica(5): 0 to 1 [usable: 0], UpdateMetadata(6): 0 to 5 [usable: 4], ControlledShutdown(7): 0 to 2 [usable: 1], OffsetCommit(8): 0 to 6 [usable: 4], OffsetFetch(9): 0 to 5 [usable: 4], FindCoordinator(10): 0 to 2 [usable: 2], JoinGroup(11): 0 to 4 [usable: 3], Heartbeat(12): 0 to 2 [usable: 2], LeaveGroup(13): 0 to 2 [usable: 2], SyncGroup(14): 0 to 2 [usable: 2], DescribeGroups(15): 0 to 2 [usable: 2], ListGroups(16): 0 to 2 [usable: 2], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 2 [usable: 2], CreateTopics(19): 0 to 3 [usable: 3], DeleteTopics(20): 0 to 3 [usable: 2], DeleteRecords(21): 0 to 1 [usable: 1], InitProducerId(22): 0 to 1 [usable: 1], OffsetForLeaderEpoch(23): 0 to 2 [usable: 1], AddPartitionsToTxn(24): 0 to 1 [usable: 1], AddOffsetsToTxn(25): 0 to 1 [usable: 1], EndTxn(26): 0 to 1 [usable: 1], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 2 [usable: 1], DescribeAcls(29): 0 to 1 [usable: 1], CreateAcls(30): 0 to 1 [usable: 1], DeleteAcls(31): 0 to 1 [usable: 1], DescribeConfigs(32): 0 to 2 [usable: 2], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 1 [usable: 1], SaslAuthenticate(36): 0 to 1 [usable: 0], CreatePartitions(37): 0 to 1 [usable: 1], CreateDelegationToken(38): 0 to 1 [usable: 1], RenewDelegationToken(39): 0 to 1 [usable: 1], ExpireDelegationToken(40): 0 to 1 [usable: 1], DescribeDelegationToken(41): 0 to 1 [usable: 1], DeleteGroups(42): 0 to 1 [usable: 1], UNKNOWN(43): 0)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Sending metadata request (type=MetadataRequest, topics=test) to node 62.234.55.241:9092 (id: -1 rack: null)
INFO main org.apache.kafka.clients.Metadata - Cluster ID: kJHxBu4kSV62RnKQGiJu4w
DEBUG main org.apache.kafka.clients.Metadata - Updated cluster metadata version 2 to Cluster(id = kJHxBu4kSV62RnKQGiJu4w, nodes = [mini1:9092 (id: 0 rack: null)], partitions = [Partition(topic = test, partition = 0, leader = 0, replicas = [0], isr = [0], offlineReplicas = [])], controller = mini1:9092 (id: 0 rack: null))
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received FindCoordinator response ClientResponse(receivedTimeMs=1561889901597, latencyMs=99, disconnected=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=2, clientId=consumer-1, correlationId=0), responseBody=FindCoordinatorResponse(throttleTimeMs=0, errorMessage='null', error=NONE, node=mini1:9092 (id: 0 rack: null)))
INFO main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Discovered group coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 2147483647 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 2147483647 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.tryConnect(ConsumerNetworkClient.java:559)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler.onSuccess(AbstractCoordinator.java:678)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler.onSuccess(AbstractCoordinator.java:658)
	at org.apache.kafka.clients.consumer.internals.RequestFuture$1.onSuccess(RequestFuture.java:204)
	at org.apache.kafka.clients.consumer.internals.RequestFuture.fireSuccess(RequestFuture.java:167)
	at org.apache.kafka.clients.consumer.internals.RequestFuture.complete(RequestFuture.java:127)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient$RequestFutureCompletionHandler.fireCompletion(ConsumerNetworkClient.java:586)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.firePendingCompletedRequests(ConsumerNetworkClient.java:400)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:303)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:230)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 20 more
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending synchronous auto-commit of offsets {}
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Heartbeat thread started
INFO main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Revoking previously assigned partitions []
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Disabling heartbeat thread
INFO main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] (Re-)joining group
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending JoinGroup ((type: JoinGroupRequest, groupId=test, sessionTimeout=10000, rebalanceTimeout=300000, memberId=, protocolType=consumer, groupProtocols=org.apache.kafka.common.requests.JoinGroupRequest$ProtocolMetadata@55cb6996)) to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 2147483647 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 2147483647 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.trySend(ConsumerNetworkClient.java:485)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:261)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.joinGroupIfNeeded(AbstractCoordinator.java:413)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:352)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:337)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:343)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 15 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initialize connection to node mini1:9092 (id: 0 rack: null) for sending metadata request
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.access$700(NetworkClient.java:64)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1035)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:920)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:508)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:271)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.joinGroupIfNeeded(AbstractCoordinator.java:413)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:352)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:337)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:343)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 17 more
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient - [Consumer clientId=consumer-1, groupId=test] Cancelled request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=3, clientId=consumer-1, correlationId=3) due to node 2147483647 being disconnected
INFO main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Group coordinator mini1:9092 (id: 2147483647 rack: null) is unavailable or invalid, will attempt rediscovery
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending FindCoordinator request to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.trySend(ConsumerNetworkClient.java:485)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:261)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:230)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.joinGroupIfNeeded(AbstractCoordinator.java:397)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:352)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:337)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:343)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 16 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient - [Consumer clientId=consumer-1, groupId=test] Cancelled request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=2, clientId=consumer-1, correlationId=4) due to node 0 being disconnected
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending FindCoordinator request to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.trySend(ConsumerNetworkClient.java:485)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:261)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:230)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 13 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient - [Consumer clientId=consumer-1, groupId=test] Cancelled request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=2, clientId=consumer-1, correlationId=5) due to node 0 being disconnected
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Coordinator discovery failed, refreshing metadata
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initialize connection to node mini1:9092 (id: 0 rack: null) for sending metadata request
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.access$700(NetworkClient.java:64)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1035)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:920)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:508)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:271)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:233)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.awaitMetadataUpdate(ConsumerNetworkClient.java:161)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:243)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 16 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initialize connection to node mini1:9092 (id: 0 rack: null) for sending metadata request
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.access$700(NetworkClient.java:64)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1035)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:920)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:508)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:271)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:233)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.awaitMetadataUpdate(ConsumerNetworkClient.java:161)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:243)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 16 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] No broker available to send FindCoordinator request
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending FindCoordinator request to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
WARN main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Error connecting to node mini1:9092 (id: 0 rack: null)
java.io.IOException: Can't resolve address: mini1:9092
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:235)
	at org.apache.kafka.common.network.Selector.connect(Selector.java:214)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:864)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.trySend(ConsumerNetworkClient.java:485)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:261)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:242)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:218)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorReady(AbstractCoordinator.java:230)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:314)
	at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1218)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1175)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1154)
	at others.MailDemo.main(MailDemo.java:24)
Caused by: java.nio.channels.UnresolvedAddressException
	at sun.nio.ch.Net.checkAddress(Net.java:101)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622)
	at org.apache.kafka.common.network.Selector.doConnect(Selector.java:233)
	... 13 more
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient - [Consumer clientId=consumer-1, groupId=test] Cancelled request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=2, clientId=consumer-1, correlationId=6) due to node 0 being disconnected
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Coordinator discovery failed, refreshing metadata
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Give up sending metadata request since no node is available
INFO main org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [62.234.55.241:9092]
	check.crcs = true
	client.id = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

DEBUG main org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=test] Initializing the Kafka consumer
DEBUG main org.apache.kafka.clients.Metadata - Updated cluster metadata version 1 to Cluster(id = null, nodes = [62.234.55.241:9092 (id: -1 rack: null)], partitions = [], controller = null)
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name fetch-throttle-time
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name connections-closed:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name connections-created:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name successful-authentication:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name failed-authentication:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name bytes-sent-received:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name bytes-sent:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name bytes-received:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name select-time:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name io-time:
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name heartbeat-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name join-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name sync-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name commit-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name bytes-fetched
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name records-fetched
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name fetch-latency
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name records-lag
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name records-lead
INFO main org.apache.kafka.common.utils.AppInfoParser - Kafka version : 2.0.1
INFO main org.apache.kafka.common.utils.AppInfoParser - Kafka commitId : fa14705e51bd2ce5
DEBUG main org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=test] Kafka consumer initialized
DEBUG main org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=test] Subscribed to topic(s): test
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending FindCoordinator request to broker 62.234.55.241:9092 (id: -1 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node 62.234.55.241:9092 (id: -1 rack: null)
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node--1.bytes-sent
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node--1.bytes-received
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node--1.latency
DEBUG main org.apache.kafka.common.network.Selector - [Consumer clientId=consumer-1, groupId=test] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node -1
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Completed connection to node -1. Fetching API versions.
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating API versions fetch from node -1.
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Recorded API versions for node -1: (Produce(0): 0 to 7 [usable: 6], Fetch(1): 0 to 10 [usable: 8], ListOffsets(2): 0 to 5 [usable: 3], Metadata(3): 0 to 7 [usable: 6], LeaderAndIsr(4): 0 to 2 [usable: 1], StopReplica(5): 0 to 1 [usable: 0], UpdateMetadata(6): 0 to 5 [usable: 4], ControlledShutdown(7): 0 to 2 [usable: 1], OffsetCommit(8): 0 to 6 [usable: 4], OffsetFetch(9): 0 to 5 [usable: 4], FindCoordinator(10): 0 to 2 [usable: 2], JoinGroup(11): 0 to 4 [usable: 3], Heartbeat(12): 0 to 2 [usable: 2], LeaveGroup(13): 0 to 2 [usable: 2], SyncGroup(14): 0 to 2 [usable: 2], DescribeGroups(15): 0 to 2 [usable: 2], ListGroups(16): 0 to 2 [usable: 2], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 2 [usable: 2], CreateTopics(19): 0 to 3 [usable: 3], DeleteTopics(20): 0 to 3 [usable: 2], DeleteRecords(21): 0 to 1 [usable: 1], InitProducerId(22): 0 to 1 [usable: 1], OffsetForLeaderEpoch(23): 0 to 2 [usable: 1], AddPartitionsToTxn(24): 0 to 1 [usable: 1], AddOffsetsToTxn(25): 0 to 1 [usable: 1], EndTxn(26): 0 to 1 [usable: 1], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 2 [usable: 1], DescribeAcls(29): 0 to 1 [usable: 1], CreateAcls(30): 0 to 1 [usable: 1], DeleteAcls(31): 0 to 1 [usable: 1], DescribeConfigs(32): 0 to 2 [usable: 2], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 1 [usable: 1], SaslAuthenticate(36): 0 to 1 [usable: 0], CreatePartitions(37): 0 to 1 [usable: 1], CreateDelegationToken(38): 0 to 1 [usable: 1], RenewDelegationToken(39): 0 to 1 [usable: 1], ExpireDelegationToken(40): 0 to 1 [usable: 1], DescribeDelegationToken(41): 0 to 1 [usable: 1], DeleteGroups(42): 0 to 1 [usable: 1], UNKNOWN(43): 0)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Sending metadata request (type=MetadataRequest, topics=test) to node 62.234.55.241:9092 (id: -1 rack: null)
INFO main org.apache.kafka.clients.Metadata - Cluster ID: kJHxBu4kSV62RnKQGiJu4w
DEBUG main org.apache.kafka.clients.Metadata - Updated cluster metadata version 2 to Cluster(id = kJHxBu4kSV62RnKQGiJu4w, nodes = [mini1:9092 (id: 0 rack: null)], partitions = [Partition(topic = test, partition = 0, leader = 0, replicas = [0], isr = [0], offlineReplicas = [])], controller = mini1:9092 (id: 0 rack: null))
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received FindCoordinator response ClientResponse(receivedTimeMs=1561890050212, latencyMs=88, disconnected=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=2, clientId=consumer-1, correlationId=0), responseBody=FindCoordinatorResponse(throttleTimeMs=0, errorMessage='null', error=NONE, node=mini1:9092 (id: 0 rack: null)))
INFO main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Discovered group coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 2147483647 rack: null)
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending synchronous auto-commit of offsets {}
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Heartbeat thread started
INFO main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Revoking previously assigned partitions []
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Disabling heartbeat thread
INFO main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] (Re-)joining group
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending JoinGroup ((type: JoinGroupRequest, groupId=test, sessionTimeout=10000, rebalanceTimeout=300000, memberId=, protocolType=consumer, groupProtocols=org.apache.kafka.common.requests.JoinGroupRequest$ProtocolMetadata@4e5ed836)) to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node-2147483647.bytes-sent
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node-2147483647.bytes-received
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node-2147483647.latency
DEBUG main org.apache.kafka.common.network.Selector - [Consumer clientId=consumer-1, groupId=test] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 2147483647
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Completed connection to node 2147483647. Fetching API versions.
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating API versions fetch from node 2147483647.
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Recorded API versions for node 2147483647: (Produce(0): 0 to 7 [usable: 6], Fetch(1): 0 to 10 [usable: 8], ListOffsets(2): 0 to 5 [usable: 3], Metadata(3): 0 to 7 [usable: 6], LeaderAndIsr(4): 0 to 2 [usable: 1], StopReplica(5): 0 to 1 [usable: 0], UpdateMetadata(6): 0 to 5 [usable: 4], ControlledShutdown(7): 0 to 2 [usable: 1], OffsetCommit(8): 0 to 6 [usable: 4], OffsetFetch(9): 0 to 5 [usable: 4], FindCoordinator(10): 0 to 2 [usable: 2], JoinGroup(11): 0 to 4 [usable: 3], Heartbeat(12): 0 to 2 [usable: 2], LeaveGroup(13): 0 to 2 [usable: 2], SyncGroup(14): 0 to 2 [usable: 2], DescribeGroups(15): 0 to 2 [usable: 2], ListGroups(16): 0 to 2 [usable: 2], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 2 [usable: 2], CreateTopics(19): 0 to 3 [usable: 3], DeleteTopics(20): 0 to 3 [usable: 2], DeleteRecords(21): 0 to 1 [usable: 1], InitProducerId(22): 0 to 1 [usable: 1], OffsetForLeaderEpoch(23): 0 to 2 [usable: 1], AddPartitionsToTxn(24): 0 to 1 [usable: 1], AddOffsetsToTxn(25): 0 to 1 [usable: 1], EndTxn(26): 0 to 1 [usable: 1], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 2 [usable: 1], DescribeAcls(29): 0 to 1 [usable: 1], CreateAcls(30): 0 to 1 [usable: 1], DeleteAcls(31): 0 to 1 [usable: 1], DescribeConfigs(32): 0 to 2 [usable: 2], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 1 [usable: 1], SaslAuthenticate(36): 0 to 1 [usable: 0], CreatePartitions(37): 0 to 1 [usable: 1], CreateDelegationToken(38): 0 to 1 [usable: 1], RenewDelegationToken(39): 0 to 1 [usable: 1], ExpireDelegationToken(40): 0 to 1 [usable: 1], DescribeDelegationToken(41): 0 to 1 [usable: 1], DeleteGroups(42): 0 to 1 [usable: 1], UNKNOWN(43): 0)
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received successful JoinGroup response: JoinGroupResponse(throttleTimeMs=0, error=NONE, generationId=1, groupProtocol=range, memberId=consumer-1-a52c3a9d-879e-4bb3-8b08-5e90bb195af9, leaderId=consumer-1-a52c3a9d-879e-4bb3-8b08-5e90bb195af9, members=consumer-1-a52c3a9d-879e-4bb3-8b08-5e90bb195af9)
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Performing assignment using strategy range with subscriptions {consumer-1-a52c3a9d-879e-4bb3-8b08-5e90bb195af9=Subscription(topics=[test])}
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Finished assignment for group: {consumer-1-a52c3a9d-879e-4bb3-8b08-5e90bb195af9=Assignment(partitions=[test-0])}
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending leader SyncGroup to coordinator mini1:9092 (id: 2147483647 rack: null): (type=SyncGroupRequest, groupId=test, generationId=1, memberId=consumer-1-a52c3a9d-879e-4bb3-8b08-5e90bb195af9, groupAssignment=consumer-1-a52c3a9d-879e-4bb3-8b08-5e90bb195af9)
INFO main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Successfully joined group with generation 1
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Enabling heartbeat thread
INFO main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Setting newly assigned partitions [test-0]
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Fetching committed offsets for partitions: [test-0]
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Found no committed offset for partition test-0
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending ListOffsetRequest (type=ListOffsetRequest, replicaId=-1, partitionTimestamps={test-0=-1}, isolationLevel=READ_UNCOMMITTED) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating connection to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node-0.bytes-sent
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node-0.bytes-received
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name node-0.latency
DEBUG main org.apache.kafka.common.network.Selector - [Consumer clientId=consumer-1, groupId=test] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 0
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Completed connection to node 0. Fetching API versions.
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Initiating API versions fetch from node 0.
DEBUG main org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=test] Recorded API versions for node 0: (Produce(0): 0 to 7 [usable: 6], Fetch(1): 0 to 10 [usable: 8], ListOffsets(2): 0 to 5 [usable: 3], Metadata(3): 0 to 7 [usable: 6], LeaderAndIsr(4): 0 to 2 [usable: 1], StopReplica(5): 0 to 1 [usable: 0], UpdateMetadata(6): 0 to 5 [usable: 4], ControlledShutdown(7): 0 to 2 [usable: 1], OffsetCommit(8): 0 to 6 [usable: 4], OffsetFetch(9): 0 to 5 [usable: 4], FindCoordinator(10): 0 to 2 [usable: 2], JoinGroup(11): 0 to 4 [usable: 3], Heartbeat(12): 0 to 2 [usable: 2], LeaveGroup(13): 0 to 2 [usable: 2], SyncGroup(14): 0 to 2 [usable: 2], DescribeGroups(15): 0 to 2 [usable: 2], ListGroups(16): 0 to 2 [usable: 2], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 2 [usable: 2], CreateTopics(19): 0 to 3 [usable: 3], DeleteTopics(20): 0 to 3 [usable: 2], DeleteRecords(21): 0 to 1 [usable: 1], InitProducerId(22): 0 to 1 [usable: 1], OffsetForLeaderEpoch(23): 0 to 2 [usable: 1], AddPartitionsToTxn(24): 0 to 1 [usable: 1], AddOffsetsToTxn(25): 0 to 1 [usable: 1], EndTxn(26): 0 to 1 [usable: 1], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 2 [usable: 1], DescribeAcls(29): 0 to 1 [usable: 1], CreateAcls(30): 0 to 1 [usable: 1], DeleteAcls(31): 0 to 1 [usable: 1], DescribeConfigs(32): 0 to 2 [usable: 2], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 1 [usable: 1], SaslAuthenticate(36): 0 to 1 [usable: 0], CreatePartitions(37): 0 to 1 [usable: 1], CreateDelegationToken(38): 0 to 1 [usable: 1], RenewDelegationToken(39): 0 to 1 [usable: 1], ExpireDelegationToken(40): 0 to 1 [usable: 1], DescribeDelegationToken(41): 0 to 1 [usable: 1], DeleteGroups(42): 0 to 1 [usable: 1], UNKNOWN(43): 0)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Handling ListOffsetResponse response for test-0. Fetched offset 1, timestamp -1
INFO main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Resetting offset for partition test-0 to offset 1.
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built full fetch (sessionId=INVALID, epoch=INITIAL) for node 0 with 1 partition(s).
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED FullFetchRequest(test-0) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent a full fetch response that created a new incremental fetch session 1610806963 with 1 response partition(s)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Fetch READ_UNCOMMITTED at offset 1 for partition test-0 returned fetch data (error=NONE, highWaterMark=1, lastStableOffset = 1, logStartOffset = 0, abortedTransactions = null, recordsSizeInBytes=0)
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name topic.test.bytes-fetched
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name topic.test.records-fetched
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name test-0.records-lag
DEBUG main org.apache.kafka.common.metrics.Metrics - Added sensor with name test-0.records-lead
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=1) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=2) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending Heartbeat request to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received successful Heartbeat response
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=3) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=4) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=1, metadata=''}}
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=5) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Committed offset 1 for partition test-0
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Completed asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=1, metadata=''}}
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending Heartbeat request to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received successful Heartbeat response
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=6) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=7) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=8) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending Heartbeat request to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received successful Heartbeat response
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=9) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=10) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=1, metadata=''}}
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Committed offset 1 for partition test-0
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Completed asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=1, metadata=''}}
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=11) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending Heartbeat request to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received successful Heartbeat response
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=12) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=13) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=14) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending Heartbeat request to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received successful Heartbeat response
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=1, metadata=''}}
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=15) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Committed offset 1 for partition test-0
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Completed asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=1, metadata=''}}
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=16) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=17) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending Heartbeat request to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG main org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received successful Heartbeat response
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=18) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=19) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=20) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=1, metadata=''}}
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Committed offset 1 for partition test-0
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Node 0 sent an incremental fetch response for session 1610806963 with 0 response partition(s), 1 implied partition(s)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Sending Heartbeat request to coordinator mini1:9092 (id: 2147483647 rack: null)
DEBUG kafka-coordinator-heartbeat-thread | test org.apache.kafka.clients.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=test] Received successful Heartbeat response
DEBUG main org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=test] Completed asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=1, metadata=''}}
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Added READ_UNCOMMITTED fetch request for partition test-0 at offset 1 to node mini1:9092 (id: 0 rack: null)
DEBUG main org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=test] Built incremental fetch (sessionId=1610806963, epoch=21) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
DEBUG main org.apache.kafka.clients.consumer.internals.Fetcher - [Consumer clientId=consumer-1, groupId=test] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker mini1:9092 (id: 0 rack: null)
